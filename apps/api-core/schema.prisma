datasource db {
  provider     = "sqlite"
  url          = "file:./api.db"
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  projects  Project[]
  usage     Usage?
}

model Project {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  ownerId     Int
  owner       User       @relation(fields: [ownerId], references: [id])
  secrets     Secret[]
  templates   Template[]
  usageId     Int        @unique

  @@index([ownerId], name: "ownerId")
}

model Usage {
  id        Int      @id @default(autoincrement())
  renders   Int      @default(0)
  templates Int      @default(0)
  requests  Int      @default(0)
  storage   Int      @default(0)
  projects  Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
}

model Secret {
  id        String   @id @default(uuid())
  name      String?
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  projectId Int
  project   Project  @relation(fields: [projectId], references: [id])

  @@index([projectId, userId])
}

model Template {
  id          Int      @id @default(autoincrement())
  name        String?
  description String?
  content     String
  fields      String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  projectId   Int
  project     Project  @relation(fields: [projectId], references: [id])

  @@index([projectId])
}

model Render {
  id         Int      @id @default(autoincrement())
  templateId Int
  projectId  Int
  type       String
  fileName   String
  values     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
